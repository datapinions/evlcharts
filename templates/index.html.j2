<!DOCTYPE html>
<html lang="en">
<head>
    <script defer data-domain="evl.datapinions.com" src="https://plausible.io/js/script.js"></script>
    <script>window.plausible = window.plausible || function() { (window.plausible.q = window.plausible.q || []).push(arguments) }</script>

    <link rel="stylesheet" href="./css/evlchart.css">

    <title>Impact of Demographics and Income on Eviction</title>

    <link rel="icon" href="./favicon512.png" sizes="512x512" />
    <link rel="icon" href="./favicon192.png" sizes="192x192" />
    <link rel="icon" href="./favicon32.png" sizes="32x32" />
    <link rel="apple-touch-icon" href="./favicon180.png" />
    <meta name="msapplication-TileImage" content="./favicon270.png" />
</head>

<body>
  <div id="titlebar">
    <h1 id="title">
      Impact Chart Demonstration
    </h1>
  </div>

  <script>
    function unfade(element) {
        element.style.color = "#333"
    }

    function updateImages() {
        const cofips_select = document.getElementById("cofips");
        const feature_select = document.getElementById("feature");

        const cofips = cofips_select.value;
        const feature = feature_select.value;

        if ((cofips == "") || (feature == "")) {
            return;
        }

        const cofips_text = cofips_select.options[cofips_select.selectedIndex].textContent;
        const feature_text = feature_select.options[feature_select.selectedIndex].textContent;

        plausible('Update', {props: {cofips: cofips_text, feature: feature_text}});

        const img_src = './images/impact_charts/' + cofips + '/' + feature + '.png';

        document.getElementById("plot").src = img_src;

        const headings = document.querySelectorAll('#output h1');
        const paragraphs0 = document.querySelectorAll('#imgdiv p');
        const paragraphs1 = document.querySelectorAll('#coveragediv p');

        headings.forEach(unfade);
        paragraphs0.forEach(unfade);
        paragraphs1.forEach(unfade);

        for (let year = {{map_years[0]}}; year < {{map_years[1]}}; year++) {

            var map_img = document.createElement("img");
            map_img.src = "./images/coverage_maps/" + cofips + '/' + year + ".png";

            var parent = document.getElementById("coverage" + year);

            while (parent.firstChild) {
              parent.removeChild(parent.lastChild);
            }
            parent.appendChild(map_img);
        }

        var all_coverage = document.getElementById("allcoverage")
        all_coverage.style.display = "block";

        // Update the URL.

        const url = window.location.href;
        const baseUrl = url.split('?')[0];

        const newUrl = `${baseUrl}?&c=${cofips}&f=${feature}`;
        const newTitle = window.title;
        const newState = { additionalInformation: `Selected ${cofips} ${feature}` };

        window.history.replaceState(newState, newTitle, newUrl);
    }
  </script>

  <div id="intro">
    <p>
        This is an interactive companion to
        <a href="https://datapinions.com/the-impact-of-demographics-and-income-on-eviction-rates/">
        The Impact of Demographics and Income on Eviction Rates</a>, which in turn builds on
        the work introduced in
        <a href="https://datapinions.com/an-introduction-to-impact-charts/">An Introduction to Impact Charts</a>.
        It can show you similar charts for many different
        counties around the country. Not all counties are included because not
        all counties have sufficient data. Below the impact charts,
        we show maps to give you an idea of what data was available and used to plot the
        charts.
    </p>
  </div>

  <div id="selections">
    <p>Please select the county you are interested in:</p>
    <select name="cofips" id="cofips" onchange="updateImages()">
      <option value="" disabled="true" selected="true">Select a County...</option>
      <optgroup label="Most Predictive Models">
        {%- for county in top_scores %}
            <option value="{{county['fips']}}">{{county['name']}} (r² = {{county['r2']}})</option>
        {% endfor %}
      </optgroup>
      <optgroup label="Least Predictive Models">
        {%- for county in bottom_scores %}
            <option value="{{county['fips']}}">{{county['name']}} (r² = {{county['r2']}})</option>
        {% endfor %}
      </optgroup>
      {%- for state, counties in by_state.items() %}
        <optgroup label="{{state}}">
          {%- for county in counties %}
            <option value="{{county['fips']}}">{{county['name']}} (r² = {{county['r2']}})</option>
          {% endfor %}
      {% endfor %}
    </select>

    <p>Please select the feature whose impact you want to plot:</p>
    <select name="feature" id="feature" onchange="updateImages()">
        <option value="" disabled="true" selected="true">-</option>
        <optgroup label="Race/Ethicity">
            <option value="White-Alone-as-Percentage-of-Renters">
            White Alone
            </option>
            <option value="White-Alone-not-Hispanic-or-Latino-as-Percentage-of-Renters">
            White Alone not Hispanic or Latino
            </option>
            <option value="Hispanic-or-Latino-as-Percentage-of-Renters">
            Hispanic or Latino of any Race
            </option>
            <option value="Black-Alone-as-Percentage-of-Renters">
            Black Alone
            </option>
            <option value="Asian-Alone-as-Percentage-of-Renters">
            Asian Alone
            </option>
            <option value="American-Indian-or-Alaskan-Native-Alone-as-Percentage-of-Renters">
            American Indian and Alaska Native Alone
            </option>
            <option value="Native-Hawaiian-or-Other-Pacific-Islander-Alone-as-Percentage-of-Renters">
            Native Hawaiian or Other Pacific Islander alone
            </option>
            <option value="Some-other-race-Alone-as-Percentage-of-Renters">
            Some Other Race Alone
            </option>
            <option value="Two-or-More-Races-as-Percentage-of-Renters">
            Two or More Races
            </option>
        </optgroup>
        <optgroup label="Economic">
            <option value="Median-Household-Income-for-Renters---2018-Dollars">
            Median Household Income for Renters (in 2018 inflation adjusted dollars)
            </option>
        </optgroup>
    </select>
  </div>

  <div id="output">
    <h1>Impact</h1>
    <div id="imgdiv">
        <p>
        The impact chart below shows the impact of a single feature
        on the prediction made for each census tract
        in the county. The green dots are mean predictions for each tract. Each green dot's
        <em>x</em> coordinate is the value of the feature for the tract. Its <em>y</em>
        coordinate is the impact.
        </p><p>
        For each tract there are also 50 gray dots vertically above or below the green
        dot. These are the predictions of 50 independent models. They function as error bars to give
        an idea of the variance of the impact.
      </p>
      <img id="plot" src="./images/sample.png"></img>
    </div>
    <hr></hr>
    <h1>Data Coverage</h1>
    <div id="coveragediv">
      <div>
        <p>
        In order to make it clear what data went into the impact chart above, we have
        produced the maps below. For details on how to interpret the maps, please see
        <a href="https://datapinions.com/the-impact-of-demographics-and-income-on-eviction-rates/">this post</a>.
        </p>
      </div>
      <div id="allcoverage">
        {%- for year in range(*map_years) %}
          <div id="coverage{{year}}" class="coverage">
          </div>
        {% endfor %}
      </div>
    </div>
  </div>

   <script>
    // Does the URL tell us what is selected?
    const url = window.location.href;
    if (url.includes('?')) {
        var setCount = 0;
        for (var assignment of url.split('?')[1].split('&')) {
            const split = assignment.split('=');
            if (split.length == 2) {
				if (split[0] === 'c') {
				    var element = document.getElementById('cofips');
				    element.value = split[1];
				    setCount = setCount + 1;
				}
				if (split[0] === 'f') {
				    var element = document.getElementById('feature');
				    element.value = split[1];
				    setCount = setCount + 1;
				}
            }
        }

        if (setCount === 2) {
            updateImages();
		}
    }
  </script>

</body>
